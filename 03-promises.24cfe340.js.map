{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SACA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAES,IAAIC,QAFTH,EAEiB,CAACI,EAASC,KAC3BC,YAAW,KACTF,EAAQ,C,SAAEN,E,MAAUC,GAAQ,GAC3BA,EAAM,EAIQ,CAACK,EAASC,KAC3BC,YAAW,KACTD,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAC1BA,EAAM,E,CAKf,MAAMQ,EAAUC,SAASC,cAAc,SAEvCF,EAAQG,iBAAiB,UAAUC,IACjCA,EAAMC,iBACN,MAAMC,EAAYC,KAAKC,MACvB,IAAIC,EAAYC,OAAOV,EAAQR,MAAMmB,OACrC,IAAK,IAAIC,EAAQ,EAAGA,EAAQZ,EAAQa,OAAOF,MAAOC,IAChDtB,EAAcsB,EAAOH,GAClBK,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MACjBuB,QAAQC,IACN,uBAAqBzB,EAAY,QAASC,kBAAsBc,EACrDC,KAAGC,UAGhBpB,EAAA6B,OAAOC,QAAQ,uBAAqB3B,EAAY,QAASC,MAAU,IAEpE2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBuB,QAAQC,IACN,sBAAoBzB,EAAY,QAASC,kBAAsBc,EACpDC,KAAGC,UAGhBpB,EAAA6B,OAAOG,QAAQ,sBAAoB7B,EAAU,QAASC,MAAU,IAEpEiB,GAAaC,OAAOV,EAAQqB,KAAKV,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve({ position, delay });\n      }, delay);\n    });\n  } else {\n    // Reject\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        reject({ position, delay });\n      }, delay);\n    });\n  }\n}\n\nconst refForm = document.querySelector('.form');\n\nrefForm.addEventListener('submit', event => {\n  event.preventDefault();\n  const dateStart = Date.now();\n  let timeDelay = Number(refForm.delay.value);\n  for (let index = 0; index < refForm.amount.value; index++) {\n    createPromise(index, timeDelay)\n      .then(({ position, delay }) => {\n        console.log(\n          `✅ Fulfilled promise ${position + 1} in ${delay}ms (time diff ${\n            dateStart - Date.now()\n          })`\n        );\n        Notify.success(`✅ Fulfilled promise ${position + 1} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(\n          `❌ Rejected promise ${position + 1} in ${delay}ms (time diff ${\n            dateStart - Date.now()\n          })`\n        );\n        Notify.failure(`❌ Rejected promise ${position + 1} in ${delay}ms`);\n      });\n    timeDelay += Number(refForm.step.value);\n  }\n  // console.log(refForm.delay.value);\n});\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$refForm","document","querySelector","addEventListener","event","preventDefault","dateStart","Date","now","timeDelay","Number","value","index","amount","then","console","log","Notify","success","catch","failure","step"],"version":3,"file":"03-promises.24cfe340.js.map"}