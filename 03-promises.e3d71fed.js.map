{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SACA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAES,IAAIC,QAFTH,EAEiB,SAACI,EAASC,GAC3BC,YAAW,WACTF,EAAQ,CAAEN,WAAUC,S,GACnBA,E,EAIc,SAACK,EAASC,GAC3BC,YAAW,WACTD,EAAO,CAAEP,WAAUC,S,GAClBA,E,GAKT,IAAMQ,EAAUC,SAASC,cAAc,SAEvCF,EAAQG,iBAAiB,UAAU,SAAAC,GACjCA,EAAMC,iBAGN,IAFA,IAAMC,EAAYC,KAAKC,MACnBC,EAAYC,OAAOV,EAAQR,MAAMmB,OAC5BC,EAAQ,EAAGA,EAAQZ,EAAQa,OAAOF,MAAOC,IAChDtB,EAAcsB,EAAOH,GAClBK,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACjBwB,QAAQC,IACN,uBAA4CC,OAAnB3B,EAAW,EAAE,QAClC2B,OADwC1B,EAAM,kBAEjD0B,OADCZ,EAAYC,KAAKC,MAClB,MAEHpB,EAAA+B,OAAOC,QAAQ,uBAA4CF,OAAnB3B,EAAW,EAAE,QAAY2B,OAAN1B,EAAM,M,IAElE6B,OAAM,SAAAN,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAClBwB,QAAQC,IACN,sBAA2CC,OAAnB3B,EAAW,EAAE,QACjC2B,OADuC1B,EAAM,kBAEhD0B,OADCZ,EAAYC,KAAKC,MAClB,MAEHpB,EAAA+B,OAAOG,QAAQ,sBAAyCJ,OAAnB3B,EAAW,EAAE,QAAY2B,OAAN1B,EAAM,M,IAElEiB,GAAaC,OAAOV,EAAQuB,KAAKZ,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve({ position, delay });\n      }, delay);\n    });\n  } else {\n    // Reject\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        reject({ position, delay });\n      }, delay);\n    });\n  }\n}\n\nconst refForm = document.querySelector('.form');\n\nrefForm.addEventListener('submit', event => {\n  event.preventDefault();\n  const dateStart = Date.now();\n  let timeDelay = Number(refForm.delay.value);\n  for (let index = 0; index < refForm.amount.value; index++) {\n    createPromise(index, timeDelay)\n      .then(({ position, delay }) => {\n        console.log(\n          `✅ Fulfilled promise ${position + 1} in ${delay}ms (time diff ${\n            dateStart - Date.now()\n          })`\n        );\n        Notify.success(`✅ Fulfilled promise ${position + 1} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(\n          `❌ Rejected promise ${position + 1} in ${delay}ms (time diff ${\n            dateStart - Date.now()\n          })`\n        );\n        Notify.failure(`❌ Rejected promise ${position + 1} in ${delay}ms`);\n      });\n    timeDelay += Number(refForm.step.value);\n  }\n  // console.log(refForm.delay.value);\n});\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$refForm","document","querySelector","addEventListener","event","preventDefault","dateStart","Date","now","timeDelay","Number","value","index","amount","then","param","console","log","concat","Notify","success","catch","failure","step"],"version":3,"file":"03-promises.e3d71fed.js.map"}